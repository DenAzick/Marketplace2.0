@page "/SignIn"
@inject HttpClient Http
@inject ILocalStorageService Storage
@inject NavigationManager NavigationManager
@using Blazored.LocalStorage
@using Marketplace.Blazor.Models.Account
@using Marketplace.Blazor.Managers;

<h3 class="text-center">Sign In</h3>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-primary text-white">
                <div class="card-body p-5">
                    <h5 class="card-title text-center">Sign In to Your Account</h5>
                    <form>
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input @bind="_userModel.UserName" class="form-control form-control-lg bg-light" id="username" type="text" placeholder="Enter your username" />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input @bind="_userModel.Password" class="form-control form-control-lg bg-light" id="password" type="password" placeholder="Enter your password" />
                        </div>
                        <div class="d-grid gap-2">
                            <button class="btn btn-light btn-lg" type="button" @onclick="Login">Sign In</button>
                        </div>
                    </form>
                    <div class="text-center mt-3">
                        <a href="/SignUp" class="text-light">Create an account</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .container {
        max-width: 800px;
    }

    .bg-primary {
        background-color: #007bff;
    }

    .text-primary {
        color: #007bff;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0069d9;
            border-color: #0062cc;
        }
</style>

@code {

    private LoginUserModel? _userModel = new LoginUserModel();

    private async Task Login()
    {
        var response = await Http.PostAsJsonAsync("/Account/login", _userModel);
        var token = await response.Content.ReadAsStringAsync();
        await Storage.SetItemAsStringAsync("token", token);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResult>();
            if (!string.IsNullOrEmpty(result?.Token))
            {
                await Storage.SetItemAsStringAsync("token", result.Token);
                NavigationManager.NavigateTo("/profile");
            }
        }
    }

    public class LoginResult
    {
        public string Token { get; set; }
    }
}
